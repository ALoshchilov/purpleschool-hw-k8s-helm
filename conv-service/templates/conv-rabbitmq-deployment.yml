apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.common.name }}-{{ .Values.mq.name }}-deployment"
spec:
  replicas: {{ .Values.mq.replicas }}
  selector:
    matchLabels:
      component: {{ .Values.mq.component }}
      
  template:
    metadata:
      labels:
        component: {{ .Values.mq.component }}
    spec:
      containers:
      - name: "{{ .Values.common.name }}-{{ .Values.mq.name }}-deployment"
        image: "{{ .Values.mq.image }}:{{ .Values.mq.tag }}"
        env:
          {{- range .Values.mq.envs  }}
          {{- $data := dict "name" $.Values.common.name "env" . }}
          {{- include "env.template" $data | indent 10}}
          {{- end }}
        resources:
          limits: {{ .Values.mq.limits | toYaml | nindent 12 }}
        volumeMounts:
          - name: "{{ .Values.mq.name }}-data"
            mountPath: "/var/lib/rabbitmq"
        ports:
        - containerPort: {{ .Values.mq.targetPort }}
      volumes:
        - name: "{{ .Values.mq.name }}-data"
          persistentVolumeClaim:
            claimName: "{{ .Values.common.name }}-{{ .Values.mq.name }}-pvc"